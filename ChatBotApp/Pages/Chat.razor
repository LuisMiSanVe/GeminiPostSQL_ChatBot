@page "/"
@inject ChatService ChatService

<div class="container">
    <h3><img src="favicon.png"/>GeminiPostSQL ChatBot</h3>

    <div class="chat-container">
        <ul class="chat-history">
            @foreach (var message in chatHistory)
            {
                <li class="chat-message">@((MarkupString)message)</li>
            }
        </ul>
    </div>

    <div class="chat-input">
        <input @bind="userMessage" @bind:event="oninput" placeholder="Type your request..." />
        <button @onclick="SendMessage" disabled="@isWaiting">Send</button>
    </div>
</div>

@code {
    private string userMessage = "";
    private List<string> chatHistory = new();
    private bool isWaiting = false;

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(userMessage))
        {
            chatHistory.Add($"<strong>User:</strong><br>{userMessage}");
            string request = userMessage;
            userMessage = "";
            isWaiting = true;

            // Add a temporary loading message
            var loadingMessage = "<strong>GeminiPostSQL ChatBot:</strong><br><em>Typing...</em>";
            chatHistory.Add(loadingMessage);

            await Task.Yield(); // Ensure UI updates before waiting for response

            var response = await ChatService.GetResponseAsync(request);

            // Replace "Typing..." with actual response
            chatHistory[^1] = $"<strong>GeminiPostSQL ChatBot:</strong><br>{response}";

            isWaiting = false;
        }
    }
}
